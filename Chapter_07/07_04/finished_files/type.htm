<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Controlling typography</title>
<style>
body {
	width: 70%;
	margin: 0 auto;
	font: 100% Arial, Helvetica, sans-serif;
}
h1 {
	font-family: Georgia, "Times New Roman", Times, serif;
	font-size: 2em;
	font-weight: normal;
	font-style: italic;
	margin: 1em 0 .4em;
}
p {
	line-height: 1.6;
	text-align: justify;
	width: 60%;
	margin: 0;
	margin-bottom: 1em;
}
</style>
</head>
<body>
<h1>HTML and CSS</h1>
<p>One way to visualize how HTML and CSS work together is to think about a new building under construction. As the building goes up, the structure of the building is built first. At just the structural level, all you see is the frame of the new building, and other than the basic shape, you don&rsquo;t really know how the building is going to look. Once the frame is complete, the &ldquo;skin&rdquo; of the building is added. This could be brick, wood, glass, stucco, or any number of outer materials that determine what the final look of the building will be.</p>
<p>HTML and CSS work much the same way. HTML gives us the structure, or &ldquo;frame&rdquo;, of our pages. We can use CSS to then control how this structure looks, where elements are positioned, and add additional decorative styling. What&rsquo;s more, much the same way a building can change dramatically by adding a new fa√ßade; web pages can change their visual design by simply changing the page&rsquo;s CSS.</p>
<p>This separation of structure and presentation creates a very flexible and efficient workflow where the structure of pages is independent of how the pages are presented. This allows you to update styling without changing page content, and provide different visual designs based on the context of where the page is being displayed.</p>
</body>
</html>
